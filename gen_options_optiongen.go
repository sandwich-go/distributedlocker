// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package distributedlocker

import "time"

// Options should use NewOptions to initialize it
type Options struct {
	RetryTimes    int
	RetryInterval time.Duration
	Expiration    time.Duration
	Prefix        string
}

// NewOptions new Options
func NewOptions(opts ...Option) *Options {
	cc := newDefaultOptions()
	for _, opt := range opts {
		opt(cc)
	}
	if watchDogOptions != nil {
		watchDogOptions(cc)
	}
	return cc
}

// ApplyOption apply multiple new option
func (cc *Options) ApplyOption(opts ...Option) {
	for _, opt := range opts {
		opt(cc)
	}
}

// Option option func
type Option func(cc *Options)

// WithRetryTimes  option func for filed RetryTimes
func WithRetryTimes(v int) Option {
	return func(cc *Options) {
		cc.RetryTimes = v
	}
}

// WithRetryInterval option func for filed RetryInterval
func WithRetryInterval(v time.Duration) Option {
	return func(cc *Options) {
		cc.RetryInterval = v
	}
}

// WithExpiration option func for filed Expiration
func WithExpiration(v time.Duration) Option {
	return func(cc *Options) {
		cc.Expiration = v
	}
}

// WithPrefix option func for filed Prefix
func WithPrefix(v string) Option {
	return func(cc *Options) {
		cc.Prefix = v
	}
}

// InstallOptionsWatchDog the installed func will called when NewOptions  called
func InstallOptionsWatchDog(dog func(cc *Options)) { watchDogOptions = dog }

// watchDogOptions global watch dog
var watchDogOptions func(cc *Options)

// newDefaultOptions new default Options
func newDefaultOptions() *Options {
	cc := &Options{}

	for _, opt := range [...]Option{
		WithRetryTimes(5),
		WithRetryInterval(time.Duration(50) * time.Millisecond),
		WithExpiration(minExpiration),
		WithPrefix("__mx__"),
	} {
		opt(cc)
	}

	return cc
}

// all getter func
func (cc *Options) GetRetryTimes() int              { return cc.RetryTimes }
func (cc *Options) GetRetryInterval() time.Duration { return cc.RetryInterval }
func (cc *Options) GetExpiration() time.Duration    { return cc.Expiration }
func (cc *Options) GetPrefix() string               { return cc.Prefix }

// OptionsVisitor visitor interface for Options
type OptionsVisitor interface {
	GetRetryTimes() int
	GetRetryInterval() time.Duration
	GetExpiration() time.Duration
	GetPrefix() string
}

// OptionsInterface visitor + ApplyOption interface for Options
type OptionsInterface interface {
	OptionsVisitor
	ApplyOption(...Option)
}
